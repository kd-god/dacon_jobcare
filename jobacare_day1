{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"jobacare_day1","private_outputs":true,"provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMEfv2QZ2RBQr5W9Ut7lOSv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"cGQpu3GFvooA"},"outputs":[],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import pandas as pd\n","from lightgbm import LGBMClassifier\n","from lightgbm import plot_importance\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import confusion_matrix, accuracy_score, precision_score, recall_score, f1_score\n","from sklearn.metrics import roc_auc_score\n","from sklearn.model_selection import StratifiedKFold\n","import seaborn as sns\n","%matplotlib inline\n","\n","df_train = pd.read_csv('/content/drive/MyDrive/데이콘/jobcare/dacon_jobcare/train.csv')\n","df_test = pd.read_csv('/content/drive/MyDrive/데이콘/jobcare/dacon_jobcare/test.csv')\n","df_sample = pd.read_csv('/content/drive/MyDrive/데이콘/jobcare/dacon_jobcare/sample_submission.csv')"],"metadata":{"id":"fZMd8RFRvvWk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train['contents_open_dt'] = df_train['contents_open_dt'].apply(pd.to_datetime)\n","df_test['contents_open_dt'] = df_test['contents_open_dt'].apply(pd.to_datetime)\n","\n","def feature_engine(df_train, df_test):\n","    list_unit = [df_train, df_test]\n","    for i in list_unit:\n","        i['year']= i['contents_open_dt'].apply(lambda x : x.year)\n","        i['month'] = i['contents_open_dt'].apply(lambda x : x.month)\n","        i['day'] = i['contents_open_dt'].apply(lambda x : x.day)\n","        i['hour'] = i['contents_open_dt'].apply(lambda x : x.hour)\n","        i.drop(['id','contents_open_dt'], axis = 1, inplace=True)\n","        \n","    return df_train, df_test"],"metadata":{"id":"ad1uOLFOwa8L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_train, df_test = feature_engine(df_train, df_test)\n","\n","X_feature = df_train.drop('target', axis = 1, inplace = False)\n","y_feature = df_train['target']"],"metadata":{"id":"mMsrKpisw2KH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def get_clf_eval(y_test, pred=None, pred_proba=None):\n","    confusion = confusion_matrix( y_test, pred)\n","    accuracy = accuracy_score(y_test , pred)\n","    precision = precision_score(y_test , pred)\n","    recall = recall_score(y_test , pred)\n","    f1 = f1_score(y_test,pred)\n","    roc_auc = roc_auc_score(y_test, pred_proba)\n","    print('오차 행렬')\n","    print(confusion)\n","    print('정확도: {0:.4f}, 정밀도: {1:.4f}, 재현율: {2:.4f},\\\n","    F1: {3:.4f}, AUC:{4:.4f}'.format(accuracy, precision, recall, f1, roc_auc))"],"metadata":{"id":"Llb7sHBFB2Ad"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["skfold = StratifiedKFold(n_splits = 5)\n","dt_lgbm = LGBMClassifier()\n","\n","for train_idx, val_idx in skfold.split(X_feature, y_feature):\n","    X_train, X_test = X_feature.loc[train_idx], X_feature.loc[val_idx]\n","    y_train, y_test = y_feature[train_idx], y_feature[val_idx]\n","\n","    dt_lgbm.fit(X_train, y_train)\n","    pred = dt_lgbm.predict(X_test)\n","    lr_pred_proba = dt_lgbm.predict_proba(X_test)[:, 1]\n","    get_clf_eval(y_test, pred, lr_pred_proba)"],"metadata":{"id":"tAPgGt2B6G56"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["fig, ax = plt.subplots(figsize=(10, 12))\n","plot_importance(dt_lgbm, ax=ax)"],"metadata":{"id":"_kXYz71m7tTA"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_sample['target'] = dt_lgbm.predict(df_test)\n","df_sample.to_csv('/content/drive/MyDrive/데이콘/jobcare/dacon_jobcare/submission.csv',index = False)"],"metadata":{"id":"BNa217E-DZpK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_sample"],"metadata":{"id":"4_1SDVaTDgfo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%cd 'content/drive/MyDrive/데이콘/jobcare/dacon_jobcare/'\n","!echo \"jobcare_day1\" >> README.md\n","!git init\n","!git config --global user.email \"rlarudejr011@naver.com\"\n","!git config --global user.name \"kd-god\"\n","!git add README.md\n","!git commit -m \"first commit\"\n","!git branch -M main\n","!git remote add origin https://kd-god:kkdwow418!@github.com/kd-god/dacon_jobcare.git\n","!git push -u origin main"],"metadata":{"id":"0trJo2yjHZ2v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"Ic65FjEbQaLD"},"execution_count":null,"outputs":[]}]}